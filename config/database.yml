# SQLite. Versions 3.8.0 and up are supported.
#   gem install sqlite3
#
#   Ensure the SQLite 3 gem is defined in your Gemfile
#   gem "sqlite3"
#
default: &default
#  adapter: sqlite3
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  <<: *default
  adapter: sqlite3
  database: storage/development.sqlite3

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  adapter: sqlite3
  database: storage/test.sqlite3


# Store production database in the storage/ directory, which by default
# is mounted as a persistent Docker volume in config/deploy.yml.  DTsohexx0eEpZYKDaIiS

production:
  primary:
    <<: *default
    adapter: postgresql
    database: postgres   # <-- Use your actual RDS database name here!
    username: iamadmin
    password: DTsohexx0eEpZYKDaIiS
    host: tinystoragedb.cluster-cvyi60ymgh3x.us-east-1.rds.amazonaws.com
  cache:
    <<: *default
    adapter: sqlite3
    database: storage/production_cache.sqlite3
    migrations_paths: db/cache_migrate
  queue:
    <<: *default
    adapter: sqlite3
    database: storage/production_queue.sqlite3
    migrations_paths: db/queue_migrate
  cable:
    <<: *default
    adapter: sqlite3
    database: storage/production_cable.sqlite3
    migrations_paths: db/cable_migrate


#production:
#  primary:
#    <<: *default
#    adapter: postgresql
#    database: postgres
#    username: iamadmin
#    password: DTsohexx0eEpZYKDaIiS
#    host: tinystoragedb.cluster-cvyi60ymgh3x.us-east-1.rds.amazonaws.com
#  cache:
#    <<: *default
#    database: storage/production_cache.sqlite3
#    migrations_paths: db/cache_migrate
#  queue:
#    <<: *default
#    database: storage/production_queue.sqlite3
#    migrations_paths: db/queue_migrate
#  cable:
#    <<: *default
#    database: storage/production_cable.sqlite3
#    migrations_paths: db/cable_migrate
